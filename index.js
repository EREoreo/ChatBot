require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const { OpenAI } = require('openai');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram –∏ OpenAI
const bot = new TelegramBot(process.env.TELEGRAM_TOKEN, { polling: true });
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const prompt = msg.text;

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
  bot.sendChatAction(chatId, 'typing');

  try {
    // –ó–∞–ø—Ä–æ—Å –∫ ChatGPT (OpenAI API)
    const completion = await openai.chat.completions.create({
      messages: [{ role: 'user', content: prompt }],
      model: 'gpt-4', // –∏–ª–∏ 'gpt-4'
      temperature: 0.7,
      max_tokens: 1000,
    });

    const response = completion.choices[0].message.content;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.sendMessage(chatId, response);
  } catch (error) {
    console.error(error);
    bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.');
  }
});

console.log('ü§ñ Telegram GPT Bot –∑–∞–ø—É—â–µ–Ω...');
